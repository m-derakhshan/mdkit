
# Optional JSON to carry through at the top
preInfo:
  pointer: "/body/banner"          # any JSON‑Pointer; optional if missing
  optional: true

# Main content info (an OBJECT, can contain nested objects or arrays)
contentInfo:
  pointer: "/body/content/0/data"  # JSON‑Pointer to the object you want
  optional: false                  # required (library will error if missing)

# Streams block (MUST be an ARRAY of stream entries)
streams:
  pointer: "/body/streams"         # pointer to the widget‐array
  itemsPointer: "/body/0/body"     # pointer _within each widget_ to the entry ARRAY

  # — Filters you always apply (any number of rules) —
  filters:
    - field: "status"
      operator: "equals"
      value: "finished"
    - field: "main"
      operator: "equals"
      value: "1"

  # — URL‐selection & auth‐rules (ANY number of WHEN → rule blocks) —
  rules:
    # VOD streams: use vod_url and require auth
    - when:
        field: "type"
        equals: "vod"
      urlField: "vod_url"
      requiresAuth: true

    # Live streams: use live_url and no auth
    - when:
        field: "type"
        equals: "live"
      urlField: "live_url"
      requiresAuth: false

    # Fallback rule: always pick `url` if present
    - when:
        field: "url"
        exists: true
      urlField: "url"
      requiresAuth: false

# Optional JSON to carry through at the bottom
postInfo:
  pointer: "/body/data"            # any JSON‑Pointer; optional if missing
  optional: true